// File: agent/build.gradle

buildscript {
    repositories {
        mavenCentral()
    }
    configurations.all {
        resolutionStrategy {
            force 'org.ow2.asm:asm:9.7'
            force 'org.ow2.asm:asm-commons:9.7'
            force 'org.ow2.asm:asm-util:9.7'
            force 'org.ow2.asm:asm-tree:9.7'
            force 'org.ow2.asm:asm-analysis:9.7'
        }
    }
}

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.runtime'
version = '0.1.0'

repositories {
    mavenCentral()
}

dependencies {
    // implementation project(':tracker-bootstrap')
    implementation 'net.bytebuddy:byte-buddy:1.14.12'
    implementation 'net.bytebuddy:byte-buddy-agent:1.14.12'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.yaml:snakeyaml:2.2'
}

// --- Force ASM 9.7 everywhere (not just runtime, but also build plugins!)
configurations.all {
    resolutionStrategy {
        force 'org.ow2.asm:asm:9.7'
        force 'org.ow2.asm:asm-commons:9.7'
        force 'org.ow2.asm:asm-util:9.7'
        force 'org.ow2.asm:asm-tree:9.7'
        force 'org.ow2.asm:asm-analysis:9.7'
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

// --- Tracker bootstrap copy logic (unchanged)
def trackerBootstrapJarName = "tracker-bootstrap-0.1.0.jar"
def trackerBootstrapBuildPath = "${rootProject.projectDir}/tracker-bootstrap/build/libs/${trackerBootstrapJarName}"
def localLibDir = file("$buildDir/libs")
def localTrackerCopy = localLibDir.toPath().resolve(trackerBootstrapJarName).toFile()

tasks.register('copyTrackerBootstrapJar', Copy) {
    dependsOn ":tracker-bootstrap:build"
    from(trackerBootstrapBuildPath)
    into(localLibDir)
    rename { trackerBootstrapJarName }
}

// --- ShadowJar config with relocation (package shading)
shadowJar {
    //  dependsOn tasks.named("copyTrackerBootstrapJar")
    archiveClassifier.set("")
    mergeServiceFiles()
    manifest {
        attributes(
                'Premain-Class': 'com.runtime.deadcode.DeadCodeAgent',
                'Agent-Class': 'com.runtime.deadcode.DeadCodeAgent',
                'Can-Redefine-Classes': 'true',
                'Can-Retransform-Classes': 'true'
        )
    }

    // Relocate all 3rd party packages to avoid host conflicts!
    relocate 'net.bytebuddy', 'shaded.net.bytebuddy'
    relocate 'com.google.gson', 'shaded.com.google.gson'
    relocate 'org.yaml.snakeyaml', 'shaded.org.yaml.snakeyaml'
}

// --- Agent distribution packaging
tasks.register('prepareAgentDist', Copy) {
    dependsOn shadowJar
    from(shadowJar.archiveFile) {
        rename { "runtime-deadcode-detector-${project.version}.jar" }
    }
    into("$buildDir/agent-dist")
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.register('agentDistZip', Zip) {
    dependsOn tasks.named("prepareAgentDist")
    from("$buildDir/agent-dist")
    archiveFileName.set("runtime-deadcode-agent.zip")
    destinationDirectory.set(file("$buildDir/distributions"))
}

tasks.named('build') {
    finalizedBy(tasks.named("prepareAgentDist"))
}
